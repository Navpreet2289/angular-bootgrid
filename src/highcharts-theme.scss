@function monochrome($color, $steps) {
  $color: darken($color,25%);
  $step: 100%/($steps+1);
  $colors: [];
  @for $i from 1 through $steps {
    $colors: append($colors,lighten($color,(($step * $i)/2)));
  }
  @return $colors
}

/* Colored, shades of blue by default */
$highlight-color-100: $blue-darker !default; /* Drilldown clickable labels, color axis max color. */
$highlight-color-80: $blue-dark !default; /* Selection marker, menu hover, button hover, chart border, navigator series. */
$highlight-color-60: $blue !default; /* Navigator mask fill. */
$highlight-color-20: lighten($blue,0.5) !default; /* Ticks and axis line. */
$highlight-color-10: lighten($blue,0.75) !default; /* Pressed button, color axis min color. */

/* Neutral colors, grayscale by default. The default colors are defined by mixing the background-color
with neutral, with a weight corresponding to the number in the name. */
$neutral-color-100: #000000 !default; /* Strong text. */
$neutral-color-80: #333333 !default; /* Main text and some strokes. */
$neutral-color-60: #666666 !default; /* Axis labels, axis title, connector fallback. */
$neutral-color-40: #999999 !default; /* Credits text, export menu stroke. */
$neutral-color-20: #cccccc !default; /* Disabled texts, button strokes, crosshair etc. */
$neutral-color-10: #e6e6e6 !default; /* Grid lines etc. */
$neutral-color-5: #f2f2f2 !default; /* Minor grid lines etc. */
$neutral-color-3: #f7f7f7 !default; /* Tooltip backgroud, button fills, map null points. */

/* Colors for data series and points. */
$colors: $green $blue $purple $yellow $red;

/* Chart background, point stroke for markers and columns etc, */
$background-color: #ffffff !default;


/* Tooltip */
$highcharts-tooltip-bg: $tooltip-bg;
$highcharts-tooltip-text: $tooltip-color;
$highcharts-tooltip-border-width: 0;

/* Lines */
$highcharts-axis-color: $gray-lighter;

chart {
  display: block;
}

.highcharts-container {
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 100%;
  text-align: left;
  line-height: normal;
  z-index: 0; /* #1072 */
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  font-family: inherit;
  font-size: 12px;
}

/* Tooltip */
.highcharts-tooltip {
  cursor: default;
  pointer-events: none;
  white-space: nowrap;
  transition: stroke 150ms;
}
.highcharts-tooltip text {
  fill: $highcharts-tooltip-text;
}
.highcharts-tooltip .highcharts-header {
  font-size: 0.85em;
}
.highcharts-tooltip-box {
  stroke-width: $highcharts-tooltip-border-width;
  fill: $highcharts-tooltip-bg !important;
  fill-opacity: 0.85;
}


/* Axes */
.highcharts-axis-line {
  fill: none;
  stroke: $highcharts-axis-color;
}
.highcharts-yaxis .highcharts-axis-line {
  stroke-width: 0;
}

//.highcharts-axis-title {
//  fill: $neutral-color-60;
//}
//.highcharts-axis-labels {
//  fill: $neutral-color-60;
//  cursor: default;
//  font-size: 0.9em;
//}
.highcharts-grid-line {
  fill: none;
  stroke: $highcharts-axis-color;
}
.highcharts-xaxis-grid .highcharts-grid-line {
  stroke-width: 0;
}
.highcharts-tick {
  stroke: $highcharts-axis-color;
}

.highcharts-range-input rect {
  fill: none;
  stroke: rgba($black,.15);
}
//.highcharts-yaxis .highcharts-tick {
//   stroke-width: 0;
// }
//.highcharts-minor-grid-line {
//  stroke: $neutral-color-5;
//}
//.highcharts-crosshair-thin {
//  stroke-width: 1px;
//  stroke: $neutral-color-20;
//}
//.highcharts-crosshair-category {
//  stroke: $highlight-color-20;
//  stroke-opacity: 0.25;
//}

/* Highstock */

.highcharts-button {
  fill: $neutral-color-3;
  stroke: $neutral-color-20;
  cursor: default;
  stroke-width: 1px;
  transition: fill 250ms;
}
.highcharts-button text {
  fill: $neutral-color-80;
}
.highcharts-button-hover {
  transition: fill 0ms;
  fill: $neutral-color-10;
  stroke: $neutral-color-80;
}
.highcharts-button-pressed {
  font-weight: $btn-font-weight;
  fill: $btn-primary-bg;
  stroke: $btn-primary-border;
  text {
    fill: $btn-primary-color;
  }
}

.highcharts-navigator-outline {
  stroke: $gray-lighter !important;
  fill: none;
}
.highcharts-navigator-handle {
  stroke: $gray-light !important;
  fill: $gray-lighter !important;
  cursor: ew-resize;
}

.highcharts-scrollbar-thumb {
  fill: $gray-lighter !important;
  stroke: $gray-lighter !important;
  stroke-width: 1px;
}

.highcharts-scrollbar-rifles {
  stroke: $black !important;
  stroke-width: 1px;
}

.highcharts-scrollbar-button {
  fill: #fff !important;
  stroke: $gray-lighter !important;
  stroke-width: 1px;
}

.highcharts-scrollbar-arrow {
  fill: $black !important;
}

.highcharts-scrollbar-track {
  fill: #fff !important;
  stroke: $gray-lighter !important;
  stroke-width: 1px;
}


.highcharts-button-disabled text {
  fill: $neutral-color-20;
}

/* Candlestick colors */
.highcharts-candlestick-series .highcharts-point-down {
  stroke: $red !important;
  fill: $red;
}

.highcharts-candlestick-series .highcharts-point-up {
  stroke: $green !important;
  fill: $green !important;
}

@mixin highcharts-variation($colors){
  /* Color variations */
  @for $i from 1 through length($colors) {
    $color: nth($colors, $i);
    .highcharts-color-#{$i - 1} {
      fill: $color;
      stroke: $color;
    }
  }
}
.danger { @include highcharts-variation(monochrome($red,5))}
.success { @include highcharts-variation(monochrome($green,5))}
.info { @include highcharts-variation(monochrome($blue,5))}
.warning { @include highcharts-variation(monochrome($yellow-darker,5))}


.positive {
  &[class*="highcharts-color-"] {
    fill: $blue !important;
    stroke: $blue !important;
  }
  rect[class*="highcharts-color-"] {
    fill: $blue !important;
    stroke: $blue !important;
  }
}

.negative {
  &[class*="highcharts-color-"] {
    fill: $red !important;
    stroke: $red !important;
  }
  rect[class*="highcharts-color-"] {
    fill: $red !important;
    stroke: $red !important;
  }
}
